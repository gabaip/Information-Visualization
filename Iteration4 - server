# Information-Visualization
The project of Pini and Ilana

library(shiny)

##### Read five intersections data (Bilu, Cabri, Elishama, Givati and Hashiva) from text files #####
Bilu <- read.delim("C:/Users/Pini/Desktop/Visualization/Project/Data/Bilu.txt")
Cabri <- read.delim("C:/Users/Pini/Desktop/Visualization/Project/Data/Cabri.txt")
Elishama <- read.delim("C:/Users/Pini/Desktop/Visualization/Project/Data/Elishama.txt")
Givati <- read.delim("C:/Users/Pini/Desktop/Visualization/Project/Data/Givati.txt")
Hashiva <- read.delim("C:/Users/Pini/Desktop/Visualization/Project/Data/Hashiva.txt")

shinyServer(function(input, output){

  output$tile <- renderPlot({

    Flag <- as.numeric(input$Intersection)

    if (Flag == 1){
      Intersection <- Bilu
    }
    if (Flag == 2){
      Intersection <- Cabri
    }
    if (Flag == 3){
      Intersection <- Elishama
    }
    if (Flag == 4){
      Intersection <- Givati
    }
    if (Flag == 5){
      Intersection <- Hashiva
    }

    ##### Rename titles #####
    names(Intersection) <- c("Date", "Time", "Green_Time", "Yellow_Time", "Red_Time")

    ##### Convert data #####
    Intersection$Date <- as.Date(Intersection$Date, '%d/%m/%Y')
    Intersection$Time <- as.matrix(Intersection$Time)

    ##### Display the day of the week in English #####
    Sys.setlocale(category = "LC_ALL", locale = "English_United States.1252")

    ##### Add column of the day of the week to the intersection data #####
    Day <- data.frame(matrix(weekdays(Intersection$Date), nrow = nrow(Intersection), ncol = 1))
    Intersection <- cbind(Intersection, Day)
    names(Intersection)[6] <- "Day"

    ##### Add column of the hour of the day to the intersection data #####
    Hour <- data.frame(matrix(substring(Intersection$Time, 1, 2), nrow = nrow(Intersection), ncol = 1))
    Intersection <- cbind(Intersection, Hour)
    names(Intersection)[7] <- "Hour"

    library(plyr)

    ##### Create a frequency table for quantity of the entrances to the intersection by hour and day #####
    Freq_Hour_Day <- count(Intersection, c('Hour','Day'))
    names(Freq_Hour_Day)[3] <- "Frequency"

    ##### Create a frequency table for quantity of the different entrance dates to the intersection data by day #####
    Freq_Day <- count(subset(count(Intersection, c('Date','Day')), select=-freq), c('Day'))
    names(Freq_Day)[2] <- "Frequency"

    ##### Sort Freq_Day table by the day of the week #####
    Freq_Day$Day <- factor(Freq_Day$Day, levels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
    Freq_Day <- Freq_Day[order(Freq_Day$Day),]

    ##### Add column to Freq_Hour_Day table with quantity of the different entrance dates by day #####
    Sunday <- subset(Freq_Hour_Day, (Freq_Hour_Day$Day == 'Sunday'))
    Sunday_Quantity = as.data.frame(rep(Freq_Day[1,2], nrow(Sunday)))
    Sunday <- cbind(Sunday, Sunday_Quantity)
    names(Sunday)[4] <- "Quantity"

    Monday <- subset(Freq_Hour_Day, (Freq_Hour_Day$Day == 'Monday'))
    Monday_Quantity = as.data.frame(rep(Freq_Day[2,2], nrow(Monday)))
    Monday <- cbind(Monday, Monday_Quantity)
    names(Monday)[4] <- "Quantity"

    Tuesday <- subset(Freq_Hour_Day, (Freq_Hour_Day$Day == 'Tuesday'))
    Tuesday_Quantity = as.data.frame(rep(Freq_Day[3,2], nrow(Tuesday)))
    Tuesday <- cbind(Tuesday, Tuesday_Quantity)
    names(Tuesday)[4] <- "Quantity"

    Wednesday <- subset(Freq_Hour_Day, (Freq_Hour_Day$Day == 'Wednesday'))
    Wednesday_Quantity = as.data.frame(rep(Freq_Day[4,2], nrow(Wednesday)))
    Wednesday <- cbind(Wednesday, Wednesday_Quantity)
    names(Wednesday)[4] <- "Quantity"

    Thursday <- subset(Freq_Hour_Day, (Freq_Hour_Day$Day == 'Thursday'))
    Thursday_Quantity = as.data.frame(rep(Freq_Day[5,2], nrow(Thursday)))
    Thursday <- cbind(Thursday, Thursday_Quantity)
    names(Thursday)[4] <- "Quantity"

    Friday <- subset(Freq_Hour_Day, (Freq_Hour_Day$Day == 'Friday'))
    Friday_Quantity = as.data.frame(rep(Freq_Day[6,2], nrow(Friday)))
    Friday <- cbind(Friday, Friday_Quantity)
    names(Friday)[4] <- "Quantity"

    Saturday <- subset(Freq_Hour_Day, (Freq_Hour_Day$Day == 'Saturday'))
    Saturday_Quantity = as.data.frame(rep(Freq_Day[7,2], nrow(Saturday)))
    Saturday <- cbind(Saturday, Saturday_Quantity)
    names(Saturday)[4] <- "Quantity"

    Freq_Hour_Day <- rbind(Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday)

    ##### Calculation of the average entrances quantity by hour and day #####
    Average_Entrances_Quantity <- as.data.frame(Freq_Hour_Day$Frequency/Freq_Hour_Day$Quantity)
    Freq_Hour_Day <- cbind(Freq_Hour_Day, Average_Entrances_Quantity)
    names(Freq_Hour_Day)[5] <- "Average_Entrances_Quantity"

    ##### Sort Freq_Hour_Day table by the day of the week #####
    Freq_Hour_Day$Day <- factor(Freq_Hour_Day$Day, levels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
    Freq_Hour_Day <- Freq_Hour_Day[order(Freq_Hour_Day$Day),]

##################################################

    ##### Create a table of vehicles passing a red light at the intersection from the intersection data #####
    Red_Table <- subset(Intersection, (Intersection$Yellow_Time >= '3000') & (Intersection$Red_Time > '0'))

    ##### Create a frequency table for quantity of the entrances at a red light to the intersection by hour and day #####
    Red_Freq_Hour_Day <- count(Red_Table, c('Hour','Day'))
    names(Red_Freq_Hour_Day)[3] <- "Frequency"

    ##### Sort Red_Freq_Hour_Day table by the day of the week #####
    Red_Freq_Hour_Day$Day <- factor(Red_Freq_Hour_Day$Day, levels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
    Red_Freq_Hour_Day <- Red_Freq_Hour_Day[order(Red_Freq_Hour_Day$Day),]

    ##### Create an empty vector #####
    Red_Entrances_Percentage <- data.frame(matrix(NA, nrow = 0, ncol = 1))

    ##### Calculation of the percentage of vehicles passing a red light at the intersection by hour and day #####
    j <- 1
    for (i in 1:nrow(Freq_Hour_Day)){
      if ((Freq_Hour_Day[i,1] == Red_Freq_Hour_Day[j,1]) & (Freq_Hour_Day[i,2] == Red_Freq_Hour_Day[j,2])){
        Red_Entrances_Percentage[nrow(Red_Entrances_Percentage) + 1,] <- (Red_Freq_Hour_Day[j,3]/Freq_Hour_Day[i,3])*100
        j <- j + 1
      }
      else{
        Red_Entrances_Percentage[nrow(Red_Entrances_Percentage) + 1,] <- 0
      }
    }
    Freq_Hour_Day <- cbind(Freq_Hour_Day, Red_Entrances_Percentage)
    names(Freq_Hour_Day)[6] <- "Red_Entrances_Percentage"

    library(ggplot2)

    ##### Use a geom_tile and a geom_point for the visualization #####
    ggplot(Freq_Hour_Day, aes(x = Freq_Hour_Day$Hour, y = Freq_Hour_Day$Day), environment = environment()) +
      geom_tile(aes(fill = Freq_Hour_Day$Average_Entrances_Quantity)) + scale_fill_continuous(low = "#f7fbff", high = "#08306b", name = "Average Entrances Quantity") + 
      labs(x = "Hour of the Day", y = "Day of the Week", title = "Average Entrances Quantity and the Percentage of Passing a Red Light by Hour and Day") +
      geom_point(aes(color = Freq_Hour_Day$Red_Entrances_Percentage), size = 10) + 
      scale_color_continuous(low = "#fff5f0", high = "#67000d", name = "Red Entrances Percentage")

  })

})
